{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,OAAQC,SAASC,cAAc,QAC/BC,gBAAiBF,SAASC,cAAc,uBACxCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAGlCI,EAAa,EACbC,EAAY,EACZC,EAAiB,EAGjBC,EAAmB,EA6BvB,SAASC,EAAoBC,EAAKC,GAElB,IAAVA,GAGJC,YAAW,WA9Bb,IAAuBC,EAAUC,EACzBC,GADeF,EA+BLL,EA/BeM,EA+BGJ,EA9B5BK,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAAQC,GACtBL,EAEFI,EAAQ,CAACN,WAASC,UAGlBM,EAAO,CAACP,WAAUC,S,KAuBkBO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACtDlB,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE9DY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBlB,EAAA2B,OAAOC,QAAQ,sBAAqCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAG5DN,GAAmB,EAInBC,EAHAC,GAAQJ,EACRK,GAAS,E,GAGTD,E,CA7BJZ,EAAKC,OAAO4B,iBAAiB,UAAU,SAACC,GACtCA,EAAIC,iBAEJxB,GAAcP,EAAKI,gBAAgB4B,MACnCxB,GAAaR,EAAKK,UAAU2B,MAC5BvB,GAAkBT,EAAKM,YAAY0B,MAEnCrB,EAAoBJ,EAAWE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst refs = {\n  formEl: document.querySelector('form'),\n  firstDelayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n}\n\nlet firstDelay = 0;\nlet delayStep = 0;\nlet amountPromises = 0;\n\n\nlet positionPromises = 1;\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve,reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({position,delay})\n    } else {\n      // Reject\n      reject({position, delay})\n    }\n  \n  })\n}\n\nrefs.formEl.addEventListener('submit', (evt)=> {\n  evt.preventDefault()\n\n  firstDelay = +refs.firstDelayInput.value\n  delayStep = +refs.stepInput.value\n  amountPromises = +refs.amountInput.value\n\n  onClickStartPomises(firstDelay,amountPromises)\n})\n\n\nfunction onClickStartPomises(time,count) {\n\n  if (count === 0) {\n    return\n  }\n  setTimeout(()=>{\n    createPromise(positionPromises, time).then(({ position, delay }) => {\n      Notify.warning(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n    positionPromises +=1\n    time += delayStep\n    count -= 1\n    \n    onClickStartPomises(time,count)\n  },time)\n}\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","firstDelayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountPromises","$ce04d3a99e08e73b$var$positionPromises","$ce04d3a99e08e73b$var$onClickStartPomises","time","count","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","Notify","warning","concat","catch","addEventListener","evt","preventDefault","value"],"version":3,"file":"03-promises.92c7e6a4.js.map"}